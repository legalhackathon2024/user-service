name: Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: hackathon-cluster    # cluster name
  GKE_ZONE: europe-central2   # cluster zone
  IMAGE: user-service # image name
  GAR_ZONE: europe-central2 # artifact registry zone
  GAR_REPO: legal-hackathon-repo # artifact registry repository
  CONTAINER_NAME: user-service
  DEPLOYMENT_NAME: user-service-deployment
  DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and test with Maven
        run: mvn clean verify

  setup-build-publish-deploy:
    needs: build-and-test
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: legalhackathonenv
    if: success()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
#      - name: Docker configuration
#        run: |-
#          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Get the GKE credentials, so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Build
        run: |-
          docker build \
          --tag "$IMAGE:$GITHUB_SHA" \
        #      --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

      # Dockerhub login
      - name: Login
        run: |-
          docker login -u $DOCKER_LOGIN -p $DOCKER_PASSWORD

      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
        #      docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$GITHUB_SHA"
          docker push "$IMAGE:$GITHUB_SHA"

      #      # Change deployment file
      #      - name: Update Image Version in the related deployment.yml
      #        uses: fjogeleit/yaml-update-action@main
      #        with:
      #          valueFile: '././k8s/user-deployment.yml'
      #          propertyPath: 'spec.template.spec.containers[0].image'
      #          value: $IMAGE:$GITHUB_SHA
      #          branch: deployment/$IMAGE:$GITHUB_SHA
      #          targetBranch: main
      #          masterBranchName: main
      #          createPR: true
      #          message: 'Update Image Version to $IMAGE:$GITHUB_SHA'


      # Modify the YAML file
      - name: Update YAML
        run: |
          echo "Modifying the YAML file"
          sed -i "s/image: .*/image: $GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$GITHUB_SHA/" ././k8s/user-deployment.yml

      # Commit and push the changes
      - name: Commit and push
        run: |
          git config --global user.email "deployment@deployment.com"
          git config --global user.name "Deployment"
          git add ././k8s/user-deployment.yml
          git commit -m "Update YAML file via GitHub Actions"
          git push

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f ././k8s
          kubectl get pods
